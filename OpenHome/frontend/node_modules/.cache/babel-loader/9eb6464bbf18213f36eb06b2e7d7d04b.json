{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { cloneDate } from '@progress/kendo-date-math';\nimport { classNames, Keys } from '@progress/kendo-react-common';\nimport { provideIntlService, registerForIntl, registerForLocalization, provideLocalizationService } from '@progress/kendo-react-intl';\nimport { messages, timePickerCancel, timePickerSet } from '../messages';\nimport { MIN_TIME, MAX_TIME, MIDNIGHT_DATE } from '../utils';\nimport { generateGetters, getNow, valueMerger } from './utils';\nimport { TimePart } from './TimePart';\n/**\n * @hidden\n */\n\nexport var Direction;\n\n(function (Direction) {\n  Direction[Direction[\"Left\"] = 0] = \"Left\";\n  Direction[Direction[\"Right\"] = 1] = \"Right\";\n})(Direction || (Direction = {}));\n/**\n * @hidden\n */\n\n\nvar TimeSelector =\n/** @class */\nfunction (_super) {\n  __extends(TimeSelector, _super);\n\n  function TimeSelector(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.focusActiveList = function () {\n      if (!_this.timePart) {\n        return;\n      }\n\n      _this.timePart.focus({\n        preventScroll: true\n      });\n    };\n\n    _this.handleKeyDown = function (event) {\n      var keyCode = event.keyCode;\n\n      switch (keyCode) {\n        case Keys.enter:\n          if (!_this.hasActiveButton()) {\n            _this.handleAccept(event);\n          }\n\n          return;\n\n        default:\n          return;\n      }\n    };\n\n    _this.handleAccept = function (event) {\n      var value = _this.mergeValue(cloneDate(_this.value || getNow()), _this.current);\n\n      _this.setState({\n        value: value\n      });\n\n      _this.valueDuringOnChange = value;\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        onChange.call(undefined, {\n          syntheticEvent: event,\n          nativeEvent: event.nativeEvent,\n          value: _this.value,\n          target: _this\n        });\n      }\n\n      _this.valueDuringOnChange = undefined;\n    };\n\n    _this.handleReject = function (event) {\n      _this.setState({\n        current: _this.value\n      });\n\n      var onReject = _this.props.onReject;\n\n      if (onReject) {\n        onReject.call(undefined, event);\n      }\n    };\n\n    _this.handleNowClick = function (event) {\n      var now = _this.mergeValue(cloneDate(_this.value || getNow()), getNow());\n\n      _this.setState({\n        current: now,\n        value: now\n      });\n\n      _this.valueDuringOnChange = now;\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        onChange.call(undefined, {\n          syntheticEvent: event,\n          nativeEvent: event.nativeEvent,\n          value: _this.value,\n          target: _this\n        });\n      }\n\n      _this.valueDuringOnChange = undefined;\n    };\n\n    _this.handleChange = function (candidate) {\n      _this.setState({\n        current: candidate\n      });\n    };\n\n    _this.dateFormatParts = _this.intl.splitDateFormat(_this.props.format || TimeSelector.defaultProps.format);\n    _this.mergeValue = valueMerger(generateGetters(_this.dateFormatParts));\n    _this.hasActiveButton = _this.hasActiveButton.bind(_this);\n    _this.state = {\n      current: _this.props.value || MIDNIGHT_DATE,\n      value: _this.props.value || TimeSelector.defaultProps.value\n    };\n    return _this;\n  }\n\n  Object.defineProperty(TimeSelector.prototype, \"element\", {\n    /**\n     * @hidden\n     */\n    get: function get() {\n      return this._element;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TimeSelector.prototype, \"value\", {\n    get: function get() {\n      var value = this.valueDuringOnChange !== undefined ? this.valueDuringOnChange : this.props.value !== undefined ? this.props.value : this.state.value;\n      return value !== null ? cloneDate(value) : null;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TimeSelector.prototype, \"intl\", {\n    get: function get() {\n      return provideIntlService(this);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TimeSelector.prototype, \"current\", {\n    get: function get() {\n      return this.state.current !== null ? cloneDate(this.state.current) : null;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * @hidden\n   */\n\n  TimeSelector.prototype.componentWillUnmount = function () {\n    clearTimeout(this.nextTickId);\n  };\n  /**\n   * @hidden\n   */\n\n\n  TimeSelector.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        format = _a.format,\n        cancelButton = _a.cancelButton,\n        disabled = _a.disabled,\n        tabIndex = _a.tabIndex,\n        className = _a.className,\n        smoothScroll = _a.smoothScroll,\n        min = _a.min,\n        max = _a.max,\n        boundRange = _a.boundRange,\n        nowButton = _a.nowButton,\n        steps = _a.steps;\n    var localizationService = provideLocalizationService(this);\n    var cancelMessage = localizationService.toLanguageString(timePickerCancel, messages[timePickerCancel]);\n    var setMessage = localizationService.toLanguageString(timePickerSet, messages[timePickerSet]);\n    return React.createElement(\"div\", {\n      ref: function ref(el) {\n        _this._element = el;\n      },\n      tabIndex: !disabled ? tabIndex || 0 : undefined,\n      className: classNames('k-timeselector k-reset', className, {\n        'k-state-disabled': disabled\n      }),\n      onKeyDown: this.handleKeyDown\n    }, React.createElement(TimePart, {\n      ref: function ref(el) {\n        _this.timePart = el;\n      },\n      value: this.current,\n      onChange: this.handleChange,\n      onNowClick: this.handleNowClick,\n      format: format,\n      smoothScroll: smoothScroll,\n      min: min,\n      max: max,\n      boundRange: boundRange,\n      disabled: disabled,\n      nowButton: nowButton,\n      steps: steps\n    }), React.createElement(\"div\", {\n      className: \"k-time-footer k-action-buttons\"\n    }, cancelButton && React.createElement(\"button\", __assign({\n      ref: function ref(btn) {\n        _this._cancelButton = btn;\n      },\n      className: \"k-button k-time-cancel\",\n      onClick: this.handleReject,\n      title: cancelMessage\n    }, {\n      'aria-label': cancelMessage\n    }), cancelMessage), React.createElement(\"button\", __assign({\n      ref: function ref(btn) {\n        _this._acceptButton = btn;\n      },\n      className: \"k-time-accept k-button k-primary\",\n      onClick: this.handleAccept,\n      title: setMessage\n    }, {\n      'aria-label': setMessage\n    }), setMessage)));\n  };\n\n  TimeSelector.prototype.nextTick = function (f) {\n    // XXX: use setTimeout due to async focus/blur events in IE, and missing relatedTarget prop.\n    // XXX: https://github.com/facebook/react/issues/3751\n    clearTimeout(this.nextTickId);\n    this.nextTickId = setTimeout(function () {\n      return f();\n    });\n  };\n\n  TimeSelector.prototype.hasActiveButton = function () {\n    if (!this._acceptButton) {\n      return false;\n    }\n\n    return document.activeElement === this._acceptButton || document.activeElement === this._cancelButton;\n  };\n\n  TimeSelector.propTypes = {\n    cancelButton: PropTypes.bool,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    format: PropTypes.string,\n    max: PropTypes.instanceOf(Date),\n    min: PropTypes.instanceOf(Date),\n    nowButton: PropTypes.bool,\n    steps: PropTypes.shape({\n      hour: PropTypes.number,\n      minute: PropTypes.number,\n      second: PropTypes.number\n    }),\n    smoothScroll: PropTypes.bool,\n    tabIndex: PropTypes.number,\n    value: PropTypes.instanceOf(Date)\n  };\n  TimeSelector.defaultProps = {\n    value: null,\n    disabled: false,\n    cancelButton: true,\n    format: 't',\n    min: MIN_TIME,\n    max: MAX_TIME,\n    boundRange: false\n  };\n  return TimeSelector;\n}(React.Component);\n\nexport { TimeSelector };\nregisterForIntl(TimeSelector);\nregisterForLocalization(TimeSelector);","map":null,"metadata":{},"sourceType":"module"}