{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { Header } from './Header';\nimport { View } from './View';\nimport { CalendarViewEnum } from '../models';\nimport { classNames } from '@progress/kendo-react-common';\nimport { cloneDate } from '@progress/kendo-date-math';\nimport { MAX_DATE, MIN_DATE } from '../../defaults';\nvar DEFAULT_FETCH_MONTHS_COUNT = 2;\n/**\n * @hidden\n */\n\nvar HorizontalViewList =\n/** @class */\nfunction (_super) {\n  __extends(HorizontalViewList, _super);\n\n  function HorizontalViewList(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.isActive = false;\n\n    _this.focusActiveDate = function () {\n      if (!_this._element) {\n        return;\n      }\n\n      var focusedCell = _this._element.querySelector(\"td.k-state-focused\");\n\n      var nextActiveCell = _this._element.querySelector('.k-state-pending-focus');\n\n      if (focusedCell && focusedCell[0]) {\n        focusedCell[0].classList.remove('k-state-focused');\n      }\n\n      if (nextActiveCell) {\n        nextActiveCell.classList.add('k-state-focused');\n      }\n\n      _this.isActive = true;\n    };\n\n    _this.blurActiveDate = function () {\n      if (!_this._element) {\n        return;\n      }\n\n      var focusedCell = _this._element.querySelector(\"td.k-state-focused\");\n\n      if (focusedCell) {\n        focusedCell.classList.remove('k-state-focused');\n      }\n\n      _this.isActive = false;\n    };\n\n    _this.rotateSelectionRange = function (selectionRange) {\n      if (selectionRange.start === null || selectionRange.end === null) {\n        return selectionRange;\n      }\n\n      var needRotate = selectionRange.end < selectionRange.start;\n      return {\n        start: needRotate ? selectionRange.end : selectionRange.start,\n        end: needRotate ? selectionRange.start : selectionRange.end\n      };\n    };\n\n    _this.handleTodayClick = function (event) {\n      _this.handleDateChange.call(undefined, event, true);\n    };\n\n    _this.handleDateChange = function (event, isTodayClick) {\n      if (isTodayClick === void 0) {\n        isTodayClick = false;\n      }\n\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        var args = {\n          syntheticEvent: event.syntheticEvent,\n          nativeEvent: event.nativeEvent,\n          value: cloneDate(event.value),\n          target: _this,\n          isTodayClick: isTodayClick\n        };\n        onChange.call(undefined, args);\n      }\n    };\n\n    _this.lastView = props.activeView;\n    return _this;\n  }\n\n  Object.defineProperty(HorizontalViewList.prototype, \"element\", {\n    get: function get() {\n      return this._element;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HorizontalViewList.prototype, \"weekNumber\", {\n    get: function get() {\n      return Boolean(this.props.showWeekNumbers && this.props.activeView === CalendarViewEnum.month);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HorizontalViewList.prototype, \"min\", {\n    get: function get() {\n      return this.props.min !== undefined ? this.props.min : HorizontalViewList.defaultProps.min;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(HorizontalViewList.prototype, \"max\", {\n    get: function get() {\n      return this.props.max !== undefined ? this.props.max : HorizontalViewList.defaultProps.max;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  HorizontalViewList.prototype.componentDidUpdate = function () {\n    if (this.isActive) {\n      this.focusActiveDate();\n    }\n\n    this.lastView = this.props.activeView;\n    this.lastViewsCount = this.props.views || HorizontalViewList.defaultProps.views;\n  };\n\n  HorizontalViewList.prototype.render = function () {\n    var _this = this;\n\n    var didViewChange = this.lastView !== this.props.activeView;\n    var isDateInList = this.dates && this.props.service.isInArray(this.props.focusedDate, this.dates);\n    var didViewsCountChange = this.lastViewsCount !== this.props.views;\n\n    if (!isDateInList || didViewChange || didViewsCountChange) {\n      this.dates = this.props.service.datesList(this.props.focusedDate, this.props.views || HorizontalViewList.defaultProps.views);\n    }\n\n    var activeDate = cloneDate(this.dates && this.dates[0] ? this.dates[0] : undefined);\n    var selectionRange = this.props.allowReverse ? this.rotateSelectionRange(this.props.selectionRange) : this.props.selectionRange;\n    var rootClassNames = classNames('k-calendar-view', {\n      'k-calendar-monthview': this.props.activeView === CalendarViewEnum.month,\n      'k-calendar-yearview': this.props.activeView === CalendarViewEnum.year,\n      'k-calendar-decadeview': this.props.activeView === CalendarViewEnum.decade,\n      'k-calendar-centuryview': this.props.activeView === CalendarViewEnum.century\n    });\n    return React.createElement(\"div\", {\n      ref: function ref(el) {\n        _this._element = el;\n      },\n      className: rootClassNames\n    }, React.createElement(Header, {\n      key: \".kendo.calendar.header.\" + activeDate.getTime(),\n      activeView: this.props.activeView,\n      currentDate: activeDate,\n      min: this.min,\n      max: this.max,\n      rangeLength: this.props.views,\n      onTodayClick: this.handleTodayClick,\n      bus: this.props.bus,\n      service: this.props.service,\n      headerTitle: this.props.headerTitle\n    }), React.createElement(\"table\", {\n      className: \"k-content\",\n      key: activeDate.getTime()\n    }, this.dates.map(function (date) {\n      return React.createElement(View, {\n        bus: _this.props.bus,\n        service: _this.props.service,\n        key: date.getTime(),\n        direction: \"horizontal\",\n        activeView: _this.props.activeView,\n        cellUID: _this.props.cellUID,\n        viewDate: date,\n        min: _this.min,\n        max: _this.max,\n        focusedDate: _this.props.focusedDate,\n        selectionRange: selectionRange,\n        selectedDate: _this.props.value,\n        showWeekNumbers: _this.weekNumber,\n        onChange: _this.handleDateChange,\n        onCellEnter: _this.props.onCellEnter,\n        cell: _this.props.cell,\n        weekCell: _this.props.weekCell\n      });\n    })));\n  };\n\n  HorizontalViewList.defaultProps = {\n    showWeekNumbers: false,\n    views: DEFAULT_FETCH_MONTHS_COUNT,\n    take: DEFAULT_FETCH_MONTHS_COUNT,\n    allowReverse: true,\n    min: MIN_DATE,\n    max: MAX_DATE\n  };\n  return HorizontalViewList;\n}(React.Component);\n\nexport { HorizontalViewList };","map":null,"metadata":{},"sourceType":"module"}