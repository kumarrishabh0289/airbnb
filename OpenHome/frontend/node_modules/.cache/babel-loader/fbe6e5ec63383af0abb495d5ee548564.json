{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { classNames } from './classNames';\n/**\n * @hidden\n */\n\nvar FloatingLabel =\n/** @class */\nfunction (_super) {\n  __extends(FloatingLabel, _super);\n\n  function FloatingLabel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      focused: false\n    };\n\n    _this.handleFocus = function (_) {\n      _this.setState({\n        focused: true\n      });\n    };\n\n    _this.handleBlur = function (_) {\n      _this.setState({\n        focused: false\n      });\n    };\n\n    return _this;\n  }\n\n  FloatingLabel.prototype.render = function () {\n    var _a = this.props,\n        label = _a.label,\n        id = _a.id,\n        className = _a.className,\n        value = _a.value,\n        placeholder = _a.placeholder,\n        valid = _a.valid,\n        style = _a.style;\n    var childClassNames = classNames({\n      'k-textbox-container': true,\n      'k-state-focused': this.state.focused,\n      'k-state-empty': !(value || placeholder),\n      'k-state-invalid': !valid && valid !== undefined,\n      'k-rtl': this.props.dir === 'rtl'\n    }, className);\n    return React.createElement(\"span\", {\n      className: childClassNames,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      style: style,\n      dir: this.props.dir\n    }, this.props.children, label ? id ? React.createElement(\"label\", {\n      htmlFor: id,\n      className: \"k-label\"\n    }, label) : React.createElement(\"span\", {\n      className: \"k-label\"\n    }, label) : null);\n  };\n\n  FloatingLabel.propTypes = {\n    label: PropTypes.string,\n    id: PropTypes.string,\n    value: PropTypes.string,\n    placeholder: PropTypes.string,\n    valid: PropTypes.bool\n  };\n  return FloatingLabel;\n}(React.Component);\n\nexport default FloatingLabel;","map":null,"metadata":{},"sourceType":"module"}