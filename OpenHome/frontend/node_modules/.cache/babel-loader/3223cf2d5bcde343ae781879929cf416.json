{"ast":null,"code":"import { CalendarViewEnum } from '../models/CalendarViewEnum';\nimport { domContainerFactory as containerFactory } from '../../utils';\nimport { canUseDOM } from '@progress/kendo-react-common';\n/**\n * @hidden\n */\n\nvar DOMService =\n/** @class */\nfunction () {\n  function DOMService() {\n    this.didCalculate = false;\n  }\n\n  DOMService.prototype.ensureHeights = function () {\n    if (this.calendarHeight !== undefined) {\n      return;\n    }\n\n    this.calculateHeights();\n  };\n\n  DOMService.prototype.calculateHeights = function (container) {\n    var _this = this;\n\n    if (!canUseDOM) {\n      return;\n    }\n\n    var div = containerFactory('div');\n    var ul = containerFactory('ul');\n    var li = containerFactory('li');\n    var td = containerFactory('td');\n    var th = containerFactory('th');\n    var tr = containerFactory('tr');\n    var tbody = containerFactory('tbody');\n    var thead = containerFactory('thead');\n    var table = containerFactory('table');\n\n    var monthHeader = function monthHeader() {\n      return div(\"\\n            <span class=\\\"k-calendar-title\\\">March 2017</span>\\n            <span class=\\\"k-calendar-today\\\">TODAY</span>\\n        \", 'k-calendar-header');\n    };\n\n    var monthWeekHeader = function monthWeekHeader() {\n      return table([thead([tr([th('MO')])])], 'k-calendar-weekdays');\n    };\n\n    var repeat = function repeat(count, mapper) {\n      return new Array(count).fill('1').map(mapper);\n    };\n\n    var content = function content(rows, cells) {\n      if (cells === void 0) {\n        cells = 1;\n      }\n\n      return table([tbody([tr([th('1')])].concat(repeat(rows, function () {\n        return tr(repeat(cells, function (c) {\n          return td(\"<span class=\\\"k-link\\\">\" + c + \"</span>\");\n        }));\n      })))]);\n    };\n\n    var scrollable = function scrollable(children) {\n      return div(children, 'k-content k-scrollable');\n    };\n\n    var view = function view(contentElement, className, renderWeekHeader) {\n      return div(renderWeekHeader ? [monthHeader(), monthWeekHeader(), scrollable([contentElement, contentElement])] : [monthHeader(), scrollable([contentElement, contentElement])], className, {\n        left: '-10000px',\n        position: 'absolute'\n      });\n    };\n\n    var navigationList = function () {\n      var navElement;\n      return function () {\n        if (!canUseDOM) {\n          return null;\n        }\n\n        if (!navElement) {\n          navElement = div([scrollable([ul([li('<span>FEB</span>')])])], 'k-calendar-navigation', {\n            left: '0px',\n            position: 'absolute'\n          });\n        }\n\n        return navElement;\n      };\n    }();\n\n    var viewFactory = function viewFactory(_a, className, renderWeekHeader) {\n      var cells = _a.cells,\n          rows = _a.rows;\n      var viewElement;\n      return function () {\n        if (!canUseDOM) {\n          return null;\n        }\n\n        if (!viewElement) {\n          viewElement = view(content(rows, cells), className, renderWeekHeader);\n        }\n\n        return viewElement;\n      };\n    };\n\n    var getScrollable = function getScrollable(element) {\n      return element.querySelector('.k-scrollable');\n    };\n\n    var horizontal = function horizontal(element) {\n      var scrollableElement = getScrollable(element);\n      scrollableElement.className = scrollableElement.className + \" k-scrollable-horizontal\";\n      return element;\n    };\n\n    var monthView = viewFactory({\n      cells: 7,\n      rows: 6\n    }, 'k-calendar-view k-calendar-monthview', true);\n    var yearView = viewFactory({\n      cells: 5,\n      rows: 3\n    }, 'k-calendar-view k-calendar-yearview', false);\n    var decadeView = viewFactory({\n      cells: 5,\n      rows: 2\n    }, 'k-calendar-view k-calendar-decadeview', false);\n\n    var horzMonthView = function horzMonthView() {\n      return horizontal(monthView());\n    };\n\n    var horzYearView = function horzYearView() {\n      return horizontal(yearView());\n    };\n\n    var horzDecadeView = function horzDecadeView() {\n      return horizontal(decadeView());\n    };\n\n    var height = function height(element) {\n      return parseFloat(window.getComputedStyle(element).height) || element.offsetHeight;\n    };\n\n    var width = function width(element) {\n      var styles = window.getComputedStyle(element);\n      var computed = parseFloat(styles.width) + parseFloat(styles.paddingLeft) + parseFloat(styles.paddingRight);\n      return computed || element.offsetWidth;\n    };\n\n    var getBody = function getBody(element) {\n      return element.querySelector('tbody');\n    };\n\n    this.didCalculate = true;\n\n    if (container) {\n      this.hostContainer = container;\n    }\n\n    this.batch(monthView(), function (contentElement) {\n      var viewElement = getBody(contentElement);\n      _this.calendarHeight = height(contentElement);\n      _this.monthViewHeight = height(viewElement);\n      _this.headerHeight = height(viewElement.children[0]);\n      _this.scrollableContentHeight = height(getScrollable(contentElement));\n    });\n    this.batch(horzMonthView(), function (contentElement) {\n      var viewElement = getBody(contentElement);\n      _this.calendarWidth = width(contentElement);\n      _this.monthViewWidth = width(viewElement);\n      _this.scrollableContentWidth = width(getScrollable(contentElement));\n    });\n    this.batch(yearView(), function (contentElement) {\n      _this.yearViewHeight = height(getBody(contentElement));\n      _this.scrollableYearContentHeight = height(getScrollable(contentElement));\n    });\n    this.batch(horzYearView(), function (contentElement) {\n      _this.yearViewWidth = width(getBody(contentElement));\n    });\n    this.batch(decadeView(), function (contentElement) {\n      _this.decadeViewHeight = height(getBody(contentElement));\n      _this.centuryViewHeight = _this.decadeViewHeight;\n    });\n    this.batch(horzDecadeView(), function (contentElement) {\n      _this.decadeViewWidth = width(getBody(contentElement));\n      _this.centuryViewWidth = _this.decadeViewWidth;\n    });\n    this.batch(navigationList(), function (contentElement) {\n      _this.navigationItemHeight = height(contentElement.querySelector('li'));\n    });\n  };\n\n  DOMService.prototype.viewHeight = function (viewType) {\n    return this.viewDimension(viewType, 'height');\n  };\n\n  DOMService.prototype.viewWidth = function (viewType) {\n    return this.viewDimension(viewType, 'width');\n  };\n\n  DOMService.prototype.viewDimension = function (viewType, dimension) {\n    var viewProp = dimension === 'height' ? 'ViewHeight' : 'ViewWidth';\n\n    switch (viewType) {\n      case CalendarViewEnum.month:\n        return this[\"month\" + viewProp];\n\n      case CalendarViewEnum.year:\n        return this[\"year\" + viewProp];\n\n      case CalendarViewEnum.decade:\n        return this[\"decade\" + viewProp];\n\n      case CalendarViewEnum.century:\n        return this[\"century\" + viewProp];\n\n      default:\n        return 1;\n    }\n  };\n\n  DOMService.prototype.batch = function (contentElement, action) {\n    var hostContainer = this.hostContainer || document.body;\n    var appendedContent = hostContainer.appendChild(contentElement);\n    action(appendedContent);\n    hostContainer.removeChild(appendedContent);\n  };\n\n  return DOMService;\n}();\n\nexport { DOMService };","map":null,"metadata":{},"sourceType":"module"}