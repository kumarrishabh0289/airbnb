{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Popup } from '@progress/kendo-react-popup';\nimport { cloneDate } from '@progress/kendo-date-math';\nimport { guid, classNames, Keys } from '@progress/kendo-react-common';\nimport { provideLocalizationService, registerForLocalization } from '@progress/kendo-react-intl';\nimport { DateInput } from '../dateinput/DateInput';\nimport { MultiViewCalendar } from '../calendar/components/MultiViewCalendar';\nimport { EMPTY_SELECTIONRANGE } from '../calendar/models';\nimport { MIN_DATE, MAX_DATE } from '../defaults';\nimport { swapStartEnd, start, end, separator, messages } from '../messages';\nvar WRAPPER_STYLES = {\n  display: 'inline-block'\n};\n\nvar DateRangePicker =\n/** @class */\nfunction (_super) {\n  __extends(DateRangePicker, _super);\n\n  function DateRangePicker(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._element = null;\n    _this._wrapper = null;\n    _this._calendar = null;\n    _this._popupId = guid();\n    _this._startInputId = guid();\n    _this._endInputId = guid();\n    _this.shouldFocusDateInput = false;\n    _this.shouldFocusCalendar = false;\n\n    _this.setStartDateInputRef = function (dateInput) {\n      _this._startDateInput = dateInput;\n    };\n\n    _this.setEndDateInputRef = function (dateInput) {\n      _this._endDateInput = dateInput;\n    };\n\n    _this.setCalendarRef = function (calendar) {\n      _this._calendar = calendar;\n    };\n\n    _this.focusCalendarElement = function () {\n      if (_this._calendar && _this._calendar.element) {\n        _this._calendar.element.focus({\n          preventScroll: true\n        });\n      }\n    };\n\n    _this.calculateValue = function (props, state) {\n      var value = props.value !== undefined ? props.value : state.value;\n      return value || EMPTY_SELECTIONRANGE;\n    };\n\n    _this.calculateShow = function (nextProps, nextState) {\n      return nextProps.show !== undefined ? nextProps.show : nextState.show;\n    };\n\n    _this.handleReverseClick = function (event) {\n      var value = {\n        start: _this.value.end,\n        end: _this.value.start\n      };\n      var args = {\n        syntheticEvent: event,\n        nativeEvent: event.nativeEvent\n      };\n\n      _this.handleChange(value, args);\n    };\n\n    _this.handleReverseMouseDown = function (event) {\n      event.preventDefault();\n    };\n\n    _this.handleFocus = function (event) {\n      clearTimeout(_this.nextTickId);\n\n      if (!_this.shouldFocusDateInput) {\n        _this.setShow(true);\n      }\n\n      if (_this._startDateInput && _this._startDateInput.element) {\n        _this._startDateInput.element.classList.add('k-state-focused');\n      }\n\n      if (_this._endDateInput && _this._endDateInput.element) {\n        _this._endDateInput.element.classList.add('k-state-focused');\n      }\n\n      var onFocus = _this.props.onFocus;\n\n      if (onFocus) {\n        onFocus.call(undefined, event);\n      }\n    };\n\n    _this.handleBlur = function (event) {\n      _this.nextTick(function () {\n        if (_this._startDateInput && _this._startDateInput.element) {\n          _this._startDateInput.element.classList.remove('k-state-focused');\n        }\n\n        if (_this._endDateInput && _this._endDateInput.element) {\n          _this._endDateInput.element.classList.remove('k-state-focused');\n        }\n\n        _this.setShow(false);\n      });\n\n      var onBlur = _this.props.onBlur;\n\n      if (onBlur) {\n        onBlur.call(undefined, event);\n      }\n    };\n\n    _this.handleEndChange = function (event) {\n      var value = {\n        start: _this.value.start,\n        end: cloneDate(event.value || undefined)\n      };\n\n      _this.handleChange(value, event);\n    };\n\n    _this.handleStartChange = function (event) {\n      var value = {\n        start: cloneDate(event.value || undefined),\n        end: _this.value.end\n      };\n\n      _this.handleChange(value, event);\n    };\n\n    _this.extractRangeFromValue = function (event) {\n      if (!Array.isArray(event.value) && !(event.value instanceof Date)) {\n        return event.value || EMPTY_SELECTIONRANGE;\n      }\n\n      var candidate = Array.isArray(event.value) ? event.value[0] : event.value;\n      return {\n        start: _this.value.end !== null ? candidate : _this.value.start,\n        end: _this.value.start !== null ? candidate : _this.value.end\n      };\n    };\n\n    _this.handleCalendarChange = function (event) {\n      var value = _this.extractRangeFromValue(event);\n\n      _this.handleChange(value, event);\n    };\n\n    _this.handleKeyDown = function (event) {\n      var keyCode = event.keyCode,\n          altKey = event.altKey;\n\n      if (keyCode === Keys.esc) {\n        event.preventDefault();\n        _this.shouldFocusDateInput = true;\n\n        _this.setShow(false);\n      } else if (altKey && keyCode === Keys.down) {\n        event.preventDefault();\n        _this.shouldFocusCalendar = true;\n\n        _this.setShow(true);\n      } else if (keyCode === Keys.tab && _this.show && _this._calendar && _this._calendar.element && _this._endDateInput && _this._endDateInput.element && document && document.activeElement === _this._endDateInput.element) {\n        event.preventDefault();\n\n        _this.focusCalendarElement();\n      }\n    };\n\n    _this.handleChange = function (value, event) {\n      _this.setState({\n        value: value\n      });\n\n      _this.valueDuringOnChange = value;\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        var args = {\n          syntheticEvent: event.syntheticEvent,\n          nativeEvent: event.nativeEvent,\n          value: _this.value,\n          show: _this.show,\n          target: _this\n        };\n        onChange.call(undefined, args);\n      }\n\n      _this.valueDuringOnChange = undefined;\n    };\n\n    _this.state = {\n      show: _this.props.show || _this.props.defaultShow || DateRangePicker.defaultProps.defaultShow,\n      value: _this.props.value || _this.props.defaultValue || DateRangePicker.defaultProps.defaultValue\n    };\n    _this.nextTick = _this.nextTick.bind(_this);\n    _this.setShow = _this.setShow.bind(_this);\n    _this.focusCalendarElement = _this.focusCalendarElement.bind(_this);\n    _this.focusDateInputElement = _this.focusDateInputElement.bind(_this);\n    return _this;\n  }\n\n  Object.defineProperty(DateRangePicker.prototype, \"element\", {\n    /**\n     * Gets the wrapping element of the DateRangePicker.\n     */\n    get: function get() {\n      return this._element;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DateRangePicker.prototype, \"calendar\", {\n    /**\n     * Gets the MultiVieCalendar inside the DateRangePicker.\n     */\n    get: function get() {\n      return this._calendar;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DateRangePicker.prototype, \"value\", {\n    /**\n     * Gets the value of the DateRangePicker.\n     */\n    get: function get() {\n      var value = this.valueDuringOnChange !== undefined ? this.valueDuringOnChange : this.props.value !== undefined ? this.props.value : this.state.value;\n      return value || EMPTY_SELECTIONRANGE;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DateRangePicker.prototype, \"show\", {\n    /**\n     * Gets the popup state of the DateRangePicker.\n     */\n    get: function get() {\n      return this.showDuringOnChange !== undefined ? this.showDuringOnChange : this.props.show !== undefined ? this.props.show : this.state.show;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DateRangePicker.prototype, \"min\", {\n    get: function get() {\n      return this.props.min !== undefined ? this.props.min : DateRangePicker.defaultProps.min;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DateRangePicker.prototype, \"max\", {\n    get: function get() {\n      return this.props.max !== undefined ? this.props.max : DateRangePicker.defaultProps.max;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * @hidden\n   */\n\n  DateRangePicker.prototype.componentDidMount = function () {\n    if (this.show) {\n      // If defaultShow is true during the initial render, the popup is not aligned.\n      this.forceUpdate();\n    }\n\n    if (this._startDateInput && this._startDateInput.element && this._endDateInput && this._endDateInput.element) {\n      this._startDateInput.element.setAttribute('aria-expanded', \"\" + this.show);\n\n      this._endDateInput.element.setAttribute('aria-expanded', \"\" + this.show);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  DateRangePicker.prototype.componentDidUpdate = function () {\n    if (this._startDateInput && this._startDateInput.element && this._endDateInput && this._endDateInput.element) {\n      this._startDateInput.element.setAttribute('aria-expanded', \"\" + this.show);\n\n      this._endDateInput.element.setAttribute('aria-expanded', \"\" + this.show);\n    }\n\n    if (this.shouldFocusCalendar) {\n      this.focusCalendarElement();\n    }\n\n    if (this.shouldFocusDateInput) {\n      this.focusDateInputElement();\n    }\n\n    this.shouldFocusCalendar = false;\n    this.shouldFocusDateInput = false;\n  };\n  /**\n   * @hidden\n   */\n\n\n  DateRangePicker.prototype.componentWillUnmount = function () {\n    clearTimeout(this.nextTickId);\n  };\n  /**\n   * @hidden\n   */\n\n\n  DateRangePicker.prototype.focus = function () {\n    if (this._startDateInput) {\n      this._startDateInput.focus();\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  DateRangePicker.prototype.render = function () {\n    var _this = this;\n\n    var value = this.value || EMPTY_SELECTIONRANGE;\n    var startDateInputId = (this.props.startDateInputSettings || {}).id || this._startInputId;\n    var endDateInputId = (this.props.endDateInputSettings || {}).id || this._endInputId;\n    var rootClassName = classNames('k-daterangepicker', {\n      'k-state-disabled': this.props.disabled\n    }, this.props.className);\n    var localizationService = provideLocalizationService(this);\n    var startMessage = localizationService.toLanguageString(start, messages[start]);\n    var endMessage = localizationService.toLanguageString(end, messages[end]);\n    var separatorMessage = localizationService.toLanguageString(separator, messages[separator]);\n\n    var startDateInputProps = __assign({\n      label: startMessage,\n      format: this.props.format,\n      min: this.min,\n      max: this.max,\n      id: this._startInputId,\n      disabled: this.props.disabled\n    }, this.props.startDateInputSettings, {\n      value: value.start,\n      onChange: this.handleStartChange\n    });\n\n    var endDateInputProps = __assign({\n      label: endMessage,\n      format: this.props.format,\n      min: this.min,\n      max: this.max,\n      id: this._endInputId,\n      disabled: this.props.disabled\n    }, this.props.endDateInputSettings, {\n      value: value.end,\n      onChange: this.handleEndChange\n    });\n\n    var popupProps = __assign({\n      animate: this._wrapper !== null,\n      anchor: this._wrapper || undefined,\n      id: this._popupId,\n      anchorAlign: {\n        horizontal: 'left',\n        vertical: 'bottom'\n      },\n      popupAlign: {\n        horizontal: 'left',\n        vertical: 'top'\n      }\n    }, this.props.popupSettings, {\n      show: this.show\n    });\n\n    var calendarProps = __assign({\n      min: this.min,\n      max: this.max,\n      allowReverse: this.props.allowReverse,\n      mode: 'range',\n      focusedDate: this.props.focusedDate,\n      disabled: this.props.disabled\n    }, this.props.calendarSettings, {\n      value: value,\n      onChange: this.handleCalendarChange\n    });\n\n    var calendar = this.props.calendar ? React.createElement(this.props.calendar, __assign({}, calendarProps)) : React.createElement(MultiViewCalendar, __assign({}, calendarProps, {\n      ref: this.setCalendarRef\n    }));\n    var reverseButton = React.createElement(\"span\", __assign({\n      role: \"button\",\n      className: \"k-select k-button k-flat\",\n      title: provideLocalizationService(this).toLanguageString(swapStartEnd, messages[swapStartEnd]),\n      onMouseDown: this.handleReverseMouseDown,\n      onClick: this.handleReverseClick\n    }, {\n      'aria-controls': startDateInputId + ' ' + endDateInputId,\n      'aria-label': provideLocalizationService(this).toLanguageString(swapStartEnd, messages[swapStartEnd])\n    }), React.createElement(\"span\", {\n      style: {\n        transform: 'rotate(90deg)'\n      },\n      className: \"k-icon k-i-arrows-swap\"\n    }));\n    return React.createElement(\"span\", {\n      ref: function ref(span) {\n        _this._element = span;\n      },\n      className: rootClassName,\n      style: this.props.style,\n      id: this.props.id,\n      tabIndex: this.props.tabIndex,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      onKeyDown: this.handleKeyDown\n    }, React.createElement(\"span\", {\n      ref: function ref(span) {\n        _this._wrapper = span;\n      },\n      className: \"k-daterangepicker-wrap\",\n      style: WRAPPER_STYLES\n    }, this.props.startDateInput ? React.createElement(this.props.startDateInput, __assign({}, startDateInputProps)) : React.createElement(DateInput, __assign({}, startDateInputProps, {\n      ref: this.setStartDateInputRef\n    })), (this.props.allowReverse || this.props.calendarSettings && this.props.calendarSettings.allowReverse) && this.props.swapButton ? reverseButton : separatorMessage, this.props.endDateInput ? React.createElement(this.props.endDateInput, __assign({}, endDateInputProps)) : React.createElement(DateInput, __assign({}, endDateInputProps, {\n      ref: this.setEndDateInputRef\n    }))), this.props.popup ? React.createElement(this.props.popup, __assign({}, popupProps), calendar) : React.createElement(Popup, __assign({}, popupProps), calendar));\n  };\n\n  DateRangePicker.prototype.focusDateInputElement = function () {\n    if (!document || !this._startDateInput || !this._startDateInput.element || !this._endDateInput || !this._endDateInput.element) {\n      return;\n    }\n\n    if ((this.value.start === null || this.value.end !== null) && document.activeElement !== this._endDateInput.element) {\n      this._startDateInput.element.focus({\n        preventScroll: true\n      });\n    } else if (document.activeElement !== this._startDateInput.element) {\n      this._endDateInput.element.focus({\n        preventScroll: true\n      });\n    }\n  };\n\n  DateRangePicker.prototype.nextTick = function (f) {\n    // XXX: use setTimeout due to async focus/blur events in IE, and missing relatedTarget prop.\n    // XXX: https://github.com/facebook/react/issues/3751\n    // Handles multiple focus events happening at the same time.\n    clearTimeout(this.nextTickId);\n    this.nextTickId = setTimeout(function () {\n      return f();\n    });\n  };\n\n  DateRangePicker.prototype.setShow = function (show) {\n    if (this.show === show) {\n      return;\n    }\n\n    this.setState({\n      show: show\n    });\n  };\n  /**\n   * @hidden\n   */\n\n\n  DateRangePicker.propTypes = {\n    allowReverse: PropTypes.bool,\n    calendarSettings: PropTypes.any,\n    className: PropTypes.string,\n    defaultShow: PropTypes.bool,\n    defaultValue: PropTypes.shape({\n      start: PropTypes.instanceOf(Date),\n      end: PropTypes.instanceOf(Date)\n    }),\n    disabled: PropTypes.bool,\n    endDateInputSettings: PropTypes.shape(DateInput.propTypes),\n    focusedDate: PropTypes.instanceOf(Date),\n    format: PropTypes.string,\n    id: PropTypes.string,\n    max: PropTypes.instanceOf(Date),\n    min: PropTypes.instanceOf(Date),\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    popupSettings: PropTypes.any,\n    show: PropTypes.bool,\n    startDateInputSettings: PropTypes.any,\n    style: PropTypes.any,\n    swapButton: PropTypes.any,\n    tabIndex: PropTypes.number,\n    value: PropTypes.shape({\n      start: PropTypes.instanceOf(Date),\n      end: PropTypes.instanceOf(Date)\n    })\n  };\n  /**\n   * @hidden\n   */\n\n  DateRangePicker.defaultProps = {\n    allowReverse: false,\n    defaultShow: false,\n    defaultValue: EMPTY_SELECTIONRANGE,\n    disabled: false,\n    format: 'd',\n    max: MAX_DATE,\n    min: MIN_DATE,\n    swapButton: false\n  };\n  return DateRangePicker;\n}(React.Component);\n\nexport { DateRangePicker };\nregisterForLocalization(DateRangePicker);","map":null,"metadata":{},"sourceType":"module"}