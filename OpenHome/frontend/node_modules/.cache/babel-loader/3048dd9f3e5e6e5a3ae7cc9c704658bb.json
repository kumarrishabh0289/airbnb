{"ast":null,"code":"(function (root, factory) {\n  if (root === null) {\n    throw new Error('Google-maps package can be used only in browser');\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.GoogleMapsLoader = factory();\n  }\n})(typeof window !== 'undefined' ? window : null, function () {\n  'use strict';\n\n  var googleVersion = '3.31';\n  var script = null;\n  var google = null;\n  var loading = false;\n  var callbacks = [];\n  var onLoadEvents = [];\n  var originalCreateLoaderMethod = null;\n  var GoogleMapsLoader = {};\n  GoogleMapsLoader.URL = 'https://maps.googleapis.com/maps/api/js';\n  GoogleMapsLoader.KEY = null;\n  GoogleMapsLoader.LIBRARIES = [];\n  GoogleMapsLoader.CLIENT = null;\n  GoogleMapsLoader.CHANNEL = null;\n  GoogleMapsLoader.LANGUAGE = null;\n  GoogleMapsLoader.REGION = null;\n  GoogleMapsLoader.VERSION = googleVersion;\n  GoogleMapsLoader.WINDOW_CALLBACK_NAME = '__google_maps_api_provider_initializator__';\n  GoogleMapsLoader._googleMockApiObject = {};\n\n  GoogleMapsLoader.load = function (fn) {\n    if (google === null) {\n      if (loading === true) {\n        if (fn) {\n          callbacks.push(fn);\n        }\n      } else {\n        loading = true;\n\n        window[GoogleMapsLoader.WINDOW_CALLBACK_NAME] = function () {\n          ready(fn);\n        };\n\n        GoogleMapsLoader.createLoader();\n      }\n    } else if (fn) {\n      fn(google);\n    }\n  };\n\n  GoogleMapsLoader.createLoader = function () {\n    script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = GoogleMapsLoader.createUrl();\n    document.body.appendChild(script);\n  };\n\n  GoogleMapsLoader.isLoaded = function () {\n    return google !== null;\n  };\n\n  GoogleMapsLoader.createUrl = function () {\n    var url = GoogleMapsLoader.URL;\n    url += '?callback=' + GoogleMapsLoader.WINDOW_CALLBACK_NAME;\n\n    if (GoogleMapsLoader.KEY) {\n      url += '&key=' + GoogleMapsLoader.KEY;\n    }\n\n    if (GoogleMapsLoader.LIBRARIES.length > 0) {\n      url += '&libraries=' + GoogleMapsLoader.LIBRARIES.join(',');\n    }\n\n    if (GoogleMapsLoader.CLIENT) {\n      url += '&client=' + GoogleMapsLoader.CLIENT;\n    }\n\n    if (GoogleMapsLoader.CHANNEL) {\n      url += '&channel=' + GoogleMapsLoader.CHANNEL;\n    }\n\n    if (GoogleMapsLoader.LANGUAGE) {\n      url += '&language=' + GoogleMapsLoader.LANGUAGE;\n    }\n\n    if (GoogleMapsLoader.REGION) {\n      url += '&region=' + GoogleMapsLoader.REGION;\n    }\n\n    if (GoogleMapsLoader.VERSION) {\n      url += '&v=' + GoogleMapsLoader.VERSION;\n    }\n\n    return url;\n  };\n\n  GoogleMapsLoader.release = function (fn) {\n    var release = function release() {\n      GoogleMapsLoader.KEY = null;\n      GoogleMapsLoader.LIBRARIES = [];\n      GoogleMapsLoader.CLIENT = null;\n      GoogleMapsLoader.CHANNEL = null;\n      GoogleMapsLoader.LANGUAGE = null;\n      GoogleMapsLoader.REGION = null;\n      GoogleMapsLoader.VERSION = googleVersion;\n      google = null;\n      loading = false;\n      callbacks = [];\n      onLoadEvents = [];\n\n      if (typeof window.google !== 'undefined') {\n        delete window.google;\n      }\n\n      if (typeof window[GoogleMapsLoader.WINDOW_CALLBACK_NAME] !== 'undefined') {\n        delete window[GoogleMapsLoader.WINDOW_CALLBACK_NAME];\n      }\n\n      if (originalCreateLoaderMethod !== null) {\n        GoogleMapsLoader.createLoader = originalCreateLoaderMethod;\n        originalCreateLoaderMethod = null;\n      }\n\n      if (script !== null) {\n        script.parentElement.removeChild(script);\n        script = null;\n      }\n\n      if (fn) {\n        fn();\n      }\n    };\n\n    if (loading) {\n      GoogleMapsLoader.load(function () {\n        release();\n      });\n    } else {\n      release();\n    }\n  };\n\n  GoogleMapsLoader.onLoad = function (fn) {\n    onLoadEvents.push(fn);\n  };\n\n  GoogleMapsLoader.makeMock = function () {\n    originalCreateLoaderMethod = GoogleMapsLoader.createLoader;\n\n    GoogleMapsLoader.createLoader = function () {\n      window.google = GoogleMapsLoader._googleMockApiObject;\n      window[GoogleMapsLoader.WINDOW_CALLBACK_NAME]();\n    };\n  };\n\n  var ready = function ready(fn) {\n    var i;\n    loading = false;\n\n    if (google === null) {\n      google = window.google;\n    }\n\n    for (i = 0; i < onLoadEvents.length; i++) {\n      onLoadEvents[i](google);\n    }\n\n    if (fn) {\n      fn(google);\n    }\n\n    for (i = 0; i < callbacks.length; i++) {\n      callbacks[i](google);\n    }\n\n    callbacks = [];\n  };\n\n  return GoogleMapsLoader;\n});","map":null,"metadata":{},"sourceType":"script"}