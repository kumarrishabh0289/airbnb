{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { cloneDate } from '@progress/kendo-date-math';\nimport { classNames, Keys } from '@progress/kendo-react-common';\nimport { provideIntlService, provideLocalizationService, registerForIntl, registerForLocalization } from '@progress/kendo-react-intl';\nimport { messages, now, selectNow } from '../messages';\nimport { TimeList } from './TimeList';\nimport { MIDNIGHT_DATE, MIN_TIME, MAX_TIME } from '../utils';\nimport { TIME_PART } from './models/TimePart';\nimport { generateSnappers, getNow, isInTimeRange, snapTime, timeInRange } from './utils';\nvar formatRegExp = new RegExp(TIME_PART.hour + \"|\" + TIME_PART.minute + \"|\" + TIME_PART.second + \"|\" + TIME_PART.dayperiod + \"|literal\");\n/**\n * @hidden\n */\n\nexport var Direction;\n\n(function (Direction) {\n  Direction[Direction[\"Left\"] = 0] = \"Left\";\n  Direction[Direction[\"Right\"] = 1] = \"Right\";\n})(Direction || (Direction = {}));\n/**\n * @hidden\n */\n\n\nvar TimePart =\n/** @class */\nfunction (_super) {\n  __extends(TimePart, _super);\n\n  function TimePart(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.timeLists = [];\n\n    _this.focus = function (args) {\n      Promise.resolve().then(function () {\n        var timeList = _this.timeLists[0];\n\n        if (_this.state.activeListIndex === -1 && !_this.hasActiveButton() && timeList && timeList.element) {\n          timeList.focus(args);\n        }\n      });\n    };\n\n    _this.timeFormatReducer = function (acc, current) {\n      return acc + current.pattern;\n    }; // Filtering only the time part of the format.\n    // Literal types are added if the previous part is\n    // part of a time format.\n\n\n    _this.timeFormatFilter = function (part, index, all) {\n      var prevItem = index >= 1 && all[index - 1];\n\n      if (!prevItem) {\n        return formatRegExp.test(part.type || '');\n      }\n\n      if (prevItem && part.type === 'literal') {\n        return formatRegExp.test(prevItem.type || '');\n      }\n\n      return formatRegExp.test(part.type || '');\n    };\n\n    _this.focusList = function (dir) {\n      if (!_this.timeLists.length) {\n        return;\n      }\n\n      _this.timeLists.reduce(_this.listReducer, []).map(function (state) {\n        return dir === Direction.Right ? state.next : state.prev;\n      }).map(function (list) {\n        return list && list.element && list.element.focus({\n          preventScroll: true\n        });\n      });\n    };\n\n    _this.listReducer = function (state, list, idx, all) {\n      if (state.length || list.props.id !== _this.state.activeListIndex) {\n        return state;\n      }\n\n      return [{\n        next: all[idx + 1] || list,\n        prev: all[idx - 1] || list\n      }];\n    };\n\n    _this.showNowButton = function () {\n      return !_this.hasSteps() && _this.props.nowButton && isInTimeRange(getNow(), _this.min, _this.max);\n    };\n\n    _this.handleKeyDown = function (event) {\n      var keyCode = event.keyCode;\n\n      switch (keyCode) {\n        case Keys.left:\n          event.preventDefault();\n\n          _this.focusList(Direction.Left);\n\n          return;\n\n        case Keys.right:\n          event.preventDefault();\n\n          _this.focusList(Direction.Right);\n\n          return;\n\n        default:\n          return;\n      }\n    };\n\n    _this.handleListBlur = function () {\n      _this.nextTick(function () {\n        _this.setState({\n          activeListIndex: -1\n        });\n      });\n    };\n\n    _this.handleListFocus = function (idx) {\n      clearTimeout(_this.nextTickId);\n\n      _this.setState({\n        activeListIndex: idx\n      });\n    };\n\n    _this.handleChange = function (candidate) {\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        onChange.call(undefined, candidate);\n      }\n    };\n\n    _this.snapTime = snapTime(generateSnappers(_this.props.steps, _this.props.min || TimePart.defaultProps.min));\n    _this.state = {\n      activeListIndex: -1\n    };\n    _this.hasActiveButton = _this.hasActiveButton.bind(_this);\n    return _this;\n  }\n\n  Object.defineProperty(TimePart.prototype, \"element\", {\n    /**\n     * @hidden\n     */\n    get: function get() {\n      return this._element;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TimePart.prototype, \"intl\", {\n    get: function get() {\n      return provideIntlService(this);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TimePart.prototype, \"value\", {\n    get: function get() {\n      return timeInRange(this.snapTime(cloneDate(this.props.value || MIDNIGHT_DATE)), this.min, this.max);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TimePart.prototype, \"min\", {\n    get: function get() {\n      return this.snapTime(this.props.min || TimePart.defaultProps.min);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TimePart.prototype, \"max\", {\n    get: function get() {\n      return this.snapTime(this.props.max || TimePart.defaultProps.max);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TimePart.prototype, \"steps\", {\n    get: function get() {\n      return this.props.steps || TimePart.defaultProps.steps;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TimePart.prototype, \"boundRange\", {\n    get: function get() {\n      return this.props.boundRange !== undefined ? this.props.boundRange : TimePart.defaultProps.boundRange;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * @hidden\n   */\n\n  TimePart.prototype.componentWillUnmount = function () {\n    clearTimeout(this.nextTickId);\n  };\n\n  TimePart.prototype.componentDidMount = function () {\n    var onMount = this.props.onMount;\n\n    if (onMount) {\n      onMount.call(undefined, this.value);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  TimePart.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        format = _a.format,\n        smoothScroll = _a.smoothScroll,\n        onNowClick = _a.onNowClick,\n        className = _a.className,\n        disabled = _a.disabled;\n    this.snapTime = snapTime(generateSnappers(this.steps, this.min));\n    this.dateFormatParts = this.intl.splitDateFormat(format || TimePart.defaultProps.format).filter(this.timeFormatFilter);\n    var rootClassName = classNames({\n      'k-state-disabled': disabled\n    }, className, 'k-time-part');\n    this.timeLists = [];\n    var localizationService = provideLocalizationService(this);\n    var selectNowMessage = localizationService.toLanguageString(selectNow, messages[selectNow]);\n    return React.createElement(\"div\", {\n      className: rootClassName\n    }, React.createElement(\"div\", {\n      className: \"k-time-header\"\n    }, React.createElement(\"span\", {\n      className: \"k-title\"\n    }, this.intl.formatDate(this.value, this.dateFormatParts.reduce(this.timeFormatReducer, ''))), this.showNowButton() && React.createElement(\"button\", __assign({\n      ref: function ref(btn) {\n        _this._nowButton = btn;\n      },\n      className: \"k-button k-bare k-time-now\",\n      title: selectNowMessage\n    }, {\n      'aria-label': selectNowMessage\n    }, {\n      onClick: onNowClick,\n      tabIndex: disabled ? -1 : 0\n    }), localizationService.toLanguageString(now, messages[now]))), React.createElement(\"div\", {\n      className: \"k-time-list-container\",\n      onKeyDown: this.handleKeyDown\n    }, React.createElement(\"span\", {\n      className: \"k-time-highlight\"\n    }), this.dateFormatParts.map(function (part, idx) {\n      return part.type !== 'literal' ? React.createElement(\"div\", {\n        key: idx,\n        className: classNames('k-time-list-wrapper', {\n          'k-state-focused': idx === _this.state.activeListIndex\n        }),\n        role: \"presentation\",\n        tabIndex: -1\n      }, React.createElement(\"span\", {\n        className: \"k-title\",\n        onMouseDown: function onMouseDown(e) {\n          e.preventDefault();\n        }\n      }, _this.intl.dateFieldName(part)), React.createElement(TimeList, {\n        min: _this.min,\n        max: _this.max,\n        boundRange: _this.boundRange,\n        part: part,\n        step: part.type ? _this.steps[part.type] : 1,\n        smoothScroll: smoothScroll,\n        ref: function ref(el) {\n          if (!el) {\n            return;\n          }\n\n          _this.timeLists.push(el);\n        },\n        id: idx,\n        onFocus: function onFocus() {\n          _this.handleListFocus(idx);\n        },\n        onBlur: _this.handleListBlur,\n        onChange: _this.handleChange,\n        value: _this.value,\n        disabled: disabled\n      })) : React.createElement(\"div\", {\n        key: idx,\n        className: \"k-time-separator\"\n      }, part.pattern);\n    })));\n  };\n\n  TimePart.prototype.nextTick = function (f) {\n    // XXX: use setTimeout due to async focus/blur events in IE, and missing relatedTarget prop.\n    // XXX: https://github.com/facebook/react/issues/3751\n    clearTimeout(this.nextTickId);\n    this.nextTickId = setTimeout(function () {\n      return f();\n    });\n  };\n\n  TimePart.prototype.hasActiveButton = function () {\n    return document.activeElement === this._nowButton;\n  };\n\n  TimePart.prototype.hasSteps = function () {\n    var _this = this;\n\n    var keys = Object.keys(this.steps);\n    return keys.length !== keys.reduce(function (acc, k) {\n      return acc + _this.steps[k];\n    }, 0);\n  };\n\n  TimePart.propTypes = {\n    cancelButton: PropTypes.bool,\n    disabled: PropTypes.bool,\n    format: PropTypes.string,\n    max: PropTypes.instanceOf(Date),\n    min: PropTypes.instanceOf(Date),\n    nowButton: PropTypes.bool,\n    steps: PropTypes.shape({\n      hour: PropTypes.number,\n      minute: PropTypes.number,\n      second: PropTypes.number\n    }),\n    smoothScroll: PropTypes.bool,\n    tabIndex: PropTypes.number,\n    value: PropTypes.instanceOf(Date)\n  };\n  TimePart.defaultProps = {\n    value: null,\n    disabled: false,\n    nowButton: true,\n    cancelButton: true,\n    format: 'hh:mm a',\n    min: MIN_TIME,\n    max: MAX_TIME,\n    steps: {},\n    boundRange: false\n  };\n  return TimePart;\n}(React.Component);\n\nexport { TimePart };\nregisterForIntl(TimePart);\nregisterForLocalization(TimePart);","map":null,"metadata":{},"sourceType":"module"}