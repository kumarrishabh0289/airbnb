{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Animation } from './Animation'; // tslint:enable:max-line-length\n\nvar Expand =\n/** @class */\nfunction (_super) {\n  __extends(Expand, _super);\n\n  function Expand() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @hidden\n   */\n\n\n  Expand.prototype.render = function () {\n    var _a = this.props,\n        direction = _a.direction,\n        children = _a.children,\n        other = __rest(_a, [\"direction\", \"children\"]);\n\n    var animationProps = {\n      transitionName: \"expand-\" + direction\n    };\n    return React.createElement(Animation, __assign({}, animationProps, other), children);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Expand.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n    childFactory: PropTypes.any,\n    className: PropTypes.string,\n    direction: PropTypes.oneOf(['horizontal', 'vertical']),\n    component: PropTypes.string,\n    id: PropTypes.string,\n    style: PropTypes.any\n  };\n  /**\n   * @hidden\n   */\n\n  Expand.defaultProps = {\n    appear: false,\n    enter: true,\n    exit: true,\n    transitionEnterDuration: 300,\n    transitionExitDuration: 300,\n    direction: 'vertical'\n  };\n  return Expand;\n}(React.Component);\n\nexport { Expand };","map":null,"metadata":{},"sourceType":"module"}