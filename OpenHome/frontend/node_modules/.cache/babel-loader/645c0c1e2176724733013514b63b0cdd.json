{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n/**\n * @hidden\n */\n\nvar ToolbarButton =\n/** @class */\nfunction (_super) {\n  __extends(ToolbarButton, _super);\n\n  function ToolbarButton(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._element = null;\n    _this.state = {\n      tabIndex: props.tabIndex\n    };\n    return _this;\n  }\n\n  Object.defineProperty(ToolbarButton.prototype, \"button\", {\n    get: function get() {\n      var element = findDOMNode(this);\n\n      if (element && element.nodeName !== 'BUTTON') {\n        return element.querySelector('button');\n      }\n\n      return element;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ToolbarButton.prototype, \"tabIndex\", {\n    get: function get() {\n      return this.state.tabIndex;\n    },\n    set: function set(value) {\n      if (this.state.tabIndex !== value) {\n        this.setState({\n          tabIndex: value\n        });\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ToolbarButton.prototype.focus = function () {\n    var button = this.element;\n\n    if (button) {\n      button.focus();\n    }\n  };\n\n  Object.defineProperty(ToolbarButton.prototype, \"element\", {\n    get: function get() {\n      return this._element;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ToolbarButton.prototype.componentDidMount = function () {\n    this._element = this.button;\n    this.adjustTabIndex();\n  };\n\n  ToolbarButton.prototype.componentWillUnmount = function () {\n    this._element = null;\n  };\n\n  ToolbarButton.prototype.componentDidUpdate = function () {\n    this._element = this.button;\n    this.adjustTabIndex();\n  };\n\n  ToolbarButton.prototype.render = function () {\n    var button = this.props.button;\n    return React.cloneElement(button, __assign({}, button.props, {\n      tabIndex: this.state.tabIndex\n    }), button.props.children);\n  };\n\n  ToolbarButton.prototype.adjustTabIndex = function () {\n    var button = this.element;\n    var tabIndex = this.state.tabIndex;\n\n    if (button && button.tabIndex !== tabIndex) {\n      button.tabIndex = tabIndex;\n    }\n  };\n\n  return ToolbarButton;\n}(React.Component);\n\nexport default ToolbarButton;","map":null,"metadata":{},"sourceType":"module"}