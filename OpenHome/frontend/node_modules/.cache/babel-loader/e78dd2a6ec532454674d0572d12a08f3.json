{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { classNames } from '@progress/kendo-react-common';\nimport { AnimationChild } from './AnimationChild';\nimport { TransitionGroup } from 'react-transition-group';\nimport util from './util';\nvar styles = util.styles; // tslint:enable:max-line-length\n\nvar Animation =\n/** @class */\nfunction (_super) {\n  __extends(Animation, _super);\n\n  function Animation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @hidden\n   */\n\n\n  Animation.prototype.render = function () {\n    var _a = this.props,\n        id = _a.id,\n        style = _a.style,\n        children = _a.children,\n        component = _a.component,\n        className = _a.className,\n        childFactory = _a.childFactory,\n        stackChildren = _a.stackChildren,\n        componentChildStyle = _a.componentChildStyle,\n        componentChildClassName = _a.componentChildClassName,\n        other = __rest(_a, [\"id\", \"style\", \"children\", \"component\", \"className\", \"childFactory\", \"stackChildren\", \"componentChildStyle\", \"componentChildClassName\"]);\n\n    var transitionProps = {\n      id: id,\n      style: style,\n      component: component,\n      childFactory: childFactory,\n      className: classNames(styles['animation-container'], styles['animation-container-relative'], className)\n    };\n    var content = React.Children.map(children || null, function (child) {\n      return React.createElement(AnimationChild, __assign({}, other, {\n        style: componentChildStyle,\n        className: componentChildClassName\n      }), child);\n    });\n    return React.createElement(TransitionGroup, __assign({}, transitionProps), content);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Animation.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n    childFactory: PropTypes.any,\n    className: PropTypes.string,\n    component: PropTypes.string,\n    id: PropTypes.string,\n    style: PropTypes.any,\n    transitionName: PropTypes.string.isRequired,\n    appear: PropTypes.bool.isRequired,\n    enter: PropTypes.bool.isRequired,\n    exit: PropTypes.bool.isRequired,\n    transitionEnterDuration: PropTypes.number.isRequired,\n    transitionExitDuration: PropTypes.number.isRequired\n  };\n  /**\n   * @hidden\n   */\n\n  Animation.defaultProps = {\n    component: 'div'\n  };\n  return Animation;\n}(React.Component);\n\nexport { Animation };","map":null,"metadata":{},"sourceType":"module"}