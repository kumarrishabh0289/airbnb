{"ast":null,"code":"import { isEqual } from '@progress/kendo-date-math';\nimport { MIDNIGHT_DATE } from '../../utils';\nimport { range, setSeconds } from '../utils';\nvar SECONDS_IN_HOUR = 60;\n\nvar clampToRange = function clampToRange(rangeValue) {\n  return function (value) {\n    return value % rangeValue;\n  };\n};\n\nvar clamp = clampToRange(SECONDS_IN_HOUR);\n\nvar stepper = function stepper(start, step) {\n  return function (idx) {\n    return clamp(start + idx * step);\n  };\n};\n\nvar distanceFromMin = function distanceFromMin(value, min) {\n  return clamp(SECONDS_IN_HOUR + value - min);\n};\n\nvar limit = function limit(borderValue) {\n  return function (barrier, value) {\n    var useBarrier = !value || barrier.getMinutes() === value.getMinutes() && barrier.getHours() === value.getHours();\n    return useBarrier ? barrier : setSeconds(barrier, borderValue);\n  };\n};\n\nvar limitDown = limit(0);\nvar limitUp = limit(SECONDS_IN_HOUR - 1);\n/**\n * @hidden\n */\n\nvar SecondsService =\n/** @class */\nfunction () {\n  function SecondsService(intl) {\n    this.intl = intl;\n    this.insertUndividedMax = false;\n  }\n\n  SecondsService.prototype.apply = function (value, candidate) {\n    return setSeconds(value, candidate.getSeconds());\n  };\n\n  SecondsService.prototype.configure = function (settings) {\n    var _this = this;\n\n    var _a = settings.insertUndividedMax,\n        insertUndividedMax = _a === void 0 ? this.insertUndividedMax : _a,\n        _b = settings.min,\n        min = _b === void 0 ? this.min : _b,\n        _c = settings.max,\n        max = _c === void 0 ? this.max : _c,\n        part = settings.part,\n        _d = settings.step,\n        step = _d === void 0 ? this.step : _d;\n    this.insertUndividedMax = insertUndividedMax;\n\n    this.toListItem = function (minute) {\n      var date = setSeconds(MIDNIGHT_DATE, minute);\n      return {\n        text: _this.intl.formatDate(date, part.pattern),\n        value: date\n      };\n    };\n\n    this.min = min;\n    this.max = max;\n    this.step = step;\n  };\n\n  SecondsService.prototype.data = function (selectedValue) {\n    var _this = this;\n\n    var min = this.range(selectedValue)[0];\n    var getSecond = stepper(min, this.step);\n\n    var convertToItem = function convertToItem(idx) {\n      return _this.toListItem(getSecond(idx));\n    };\n\n    var data = range(0, this.countFromMin(selectedValue)).map(convertToItem);\n    this.addLast(data);\n\n    if (selectedValue) {\n      this.addMissing(data, selectedValue);\n    }\n\n    return data;\n  };\n\n  SecondsService.prototype.isRangeChanged = function (min, max) {\n    return !isEqual(this.min, min) || !isEqual(this.max, max);\n  };\n\n  SecondsService.prototype.limitRange = function (min, max, value) {\n    return [limitDown(min, value), limitUp(max, value)];\n  };\n\n  SecondsService.prototype.total = function (value) {\n    var last = this.insertUndividedMax && this.isLastMissing(value) ? 1 : 0;\n    var missing = this.isMissing(value) ? 1 : 0;\n    return this.countFromMin(value) + missing + last;\n  };\n\n  SecondsService.prototype.selectedIndex = function (value) {\n    return Math.ceil(this.divideByStep(value));\n  };\n\n  SecondsService.prototype.valueInList = function (value) {\n    if (!value) {\n      return true;\n    }\n\n    var matchMax = this.insertUndividedMax && this.lastSecond(value) === value.getSeconds();\n    return matchMax || !this.isMissing(value);\n  };\n\n  SecondsService.prototype.divideByStep = function (value) {\n    return distanceFromMin(value.getSeconds(), this.min.getSeconds()) / this.step;\n  };\n\n  SecondsService.prototype.addLast = function (data, value) {\n    if (this.insertUndividedMax && this.isLastMissing(value)) {\n      data.push(this.toListItem(this.lastSecond(value)));\n    }\n\n    return data;\n  };\n\n  SecondsService.prototype.addMissing = function (data, value) {\n    if (this.valueInList(value)) {\n      return data;\n    }\n\n    var missingItem = this.toListItem(value.getSeconds());\n    data.splice(this.selectedIndex(value), 0, missingItem);\n    return data;\n  };\n\n  SecondsService.prototype.countFromMin = function (value) {\n    var _a = this.range(value),\n        min = _a[0],\n        max = _a[1];\n\n    return Math.floor(distanceFromMin(max, min) / this.step) + 1;\n    /* include min */\n  };\n\n  SecondsService.prototype.isMissing = function (value) {\n    if (!value) {\n      return false;\n    }\n\n    return this.selectedIndex(value) !== this.divideByStep(value);\n  };\n\n  SecondsService.prototype.isLastMissing = function (value) {\n    return this.isMissing(setSeconds(this.max, this.lastSecond(value)));\n  };\n\n  SecondsService.prototype.lastSecond = function (value) {\n    return this.range(value)[1];\n  };\n\n  SecondsService.prototype.range = function (value) {\n    var _a = this.limitRange(this.min, this.max, value),\n        min = _a[0],\n        max = _a[1];\n\n    return [min.getSeconds(), max.getSeconds()];\n  };\n\n  return SecondsService;\n}();\n\nexport { SecondsService };","map":null,"metadata":{},"sourceType":"module"}