{"ast":null,"code":"var divideByMagnitude = function divideByMagnitude(magnitude) {\n  return function (x) {\n    return Math.floor(x / magnitude);\n  };\n};\n\nvar powerByMagnitude = function powerByMagnitude(magnitude) {\n  return function (x) {\n    return x * magnitude;\n  };\n};\n/**\n * @hidden\n */\n\n\nvar ScrollSyncService =\n/** @class */\nfunction () {\n  function ScrollSyncService(dom) {\n    this.dom = dom;\n    this.monthScrolled = false;\n    this.navScrolled = false;\n  }\n\n  ScrollSyncService.prototype.configure = function (activeView) {\n    var magnitude = Math.max(this.dom.viewHeight(activeView) / this.dom.navigationItemHeight, 1);\n    this.divideByMagnitude = divideByMagnitude(magnitude);\n    this.powerByMagnitude = powerByMagnitude(magnitude);\n  };\n\n  ScrollSyncService.prototype.sync = function (navigator, view, e) {\n    if (!navigator || !view) {\n      return;\n    }\n\n    this.navigator = navigator;\n    this.view = view;\n\n    if (e.target === this.navigator.element) {\n      if (this.monthScrolled) {\n        this.monthScrolled = false;\n        return;\n      }\n\n      this.navScrolled = true;\n      this.scrollSiblingOf(this.navigator.element);\n    }\n\n    if (e.target === this.view.element) {\n      if (this.navScrolled) {\n        this.navScrolled = false;\n        return;\n      }\n\n      this.monthScrolled = true;\n      this.scrollSiblingOf(this.view.element);\n    }\n  };\n\n  ScrollSyncService.prototype.scrollSiblingOf = function (scrolledElement) {\n    var component = this.siblingComponent(scrolledElement);\n    var scrollTop = this.calculateScroll(component, scrolledElement.scrollTop);\n    component.scrollTo(scrollTop);\n  };\n\n  ScrollSyncService.prototype.siblingComponent = function (scrollableElement) {\n    return this.navigator.element === scrollableElement ? this.view : this.navigator;\n  };\n\n  ScrollSyncService.prototype.calculateScroll = function (component, scrollTop) {\n    var modifier = component === this.navigator ? this.divideByMagnitude : this.powerByMagnitude;\n    return modifier(scrollTop);\n  };\n\n  return ScrollSyncService;\n}();\n\nexport { ScrollSyncService };","map":null,"metadata":{},"sourceType":"module"}