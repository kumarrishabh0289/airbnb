{"ast":null,"code":"import { cloneDate, isEqual } from '@progress/kendo-date-math';\nimport { getDate } from '@progress/kendo-date-math';\nimport { EMPTY_SELECTIONRANGE } from './calendar/models/SelectionRange';\n/**\n * @hidden\n */\n\nexport var isEqualRange = function isEqualRange(initial, updated) {\n  var _a = initial || EMPTY_SELECTIONRANGE,\n      initialStart = _a.start,\n      initialEnd = _a.end;\n\n  var _b = updated || EMPTY_SELECTIONRANGE,\n      updatedStart = _b.start,\n      updatedEnd = _b.end;\n\n  if (initialStart === null || initialEnd === null || updatedStart === null || updatedEnd === null) {\n    return false;\n  }\n\n  return isEqual(initialStart, updatedStart) && isEqual(initialEnd, updatedEnd);\n};\n/**\n * @hidden\n */\n\nexport var viewInRange = function viewInRange(candidate, min, max) {\n  if (min === undefined || max === undefined) {\n    return candidate;\n  }\n\n  return min <= candidate && candidate <= max ? candidate : candidate < min ? min : max;\n};\n/**\n * @hidden\n */\n\nexport var MIDNIGHT_DATE = new Date(1980, 0, 1);\n/**\n * @hidden\n */\n\nexport var MIN_DATE = new Date(1900, 0, 1);\n/**\n * @hidden\n */\n\nexport var MAX_DATE = new Date(2099, 11, 31);\n/**\n * @hidden\n */\n\nexport var MIN_TIME = new Date(1980, 0, 1);\n/**\n * @hidden\n */\n\nexport var MAX_TIME = new Date(1980, 0, 1, 23, 59, 59);\n\nvar isSet = function isSet(value) {\n  return value !== null && value !== undefined;\n};\n/**\n * @hidden\n */\n\n\nexport var isValidRange = function isValidRange(min, max) {\n  return !isSet(min) || !isSet(max) || min <= max;\n};\n/**\n * @hidden\n */\n\nexport var setTime = function setTime(origin, candidate) {\n  var date = cloneDate(origin);\n  date.setHours(candidate.getHours(), candidate.getMinutes(), candidate.getSeconds(), candidate.getMilliseconds());\n  return date;\n};\n/**\n * @hidden\n */\n\nexport var getToday = function getToday() {\n  return getDate(new Date());\n};\n/**\n * @hidden\n */\n\nexport var isInRange = function isInRange(candidate, min, max) {\n  return !candidate || !(min && min > candidate || max && max < candidate);\n};\n/**\n * @hidden\n */\n\nexport var isInDateRange = function isInDateRange(candidate, min, max) {\n  return candidate === null || !(min && getDate(min) > getDate(candidate) || max && getDate(max) < getDate(candidate));\n};\n/**\n * @hidden\n */\n\nexport var isInSelectionRange = function isInSelectionRange(value, selectionRange) {\n  var _a = selectionRange || EMPTY_SELECTIONRANGE,\n      start = _a.start,\n      end = _a.end;\n\n  if (!start || !end) {\n    return false;\n  }\n\n  return start < value && value < end;\n};\n/**\n * @hidden\n */\n\nexport var range = function range(start, end, step) {\n  if (step === void 0) {\n    step = 1;\n  }\n\n  var result = [];\n\n  for (var i = start; i < end; i = i + step) {\n    result.push(i);\n  }\n\n  return result;\n};\n/**\n * @hidden\n */\n\nexport var shiftWeekNames = function shiftWeekNames(names, offset) {\n  return names.slice(offset).concat(names.slice(0, offset));\n};\n/**\n * @hidden\n */\n\nexport var dateInRange = function dateInRange(candidate, min, max) {\n  if (!candidate) {\n    return candidate;\n  }\n\n  if (min && candidate < min) {\n    return cloneDate(min);\n  }\n\n  if (max && candidate > max) {\n    return cloneDate(max);\n  }\n\n  return candidate;\n};\n/**\n * @hidden\n */\n\nexport var domContainerFactory = function domContainerFactory(type) {\n  return function (children, classes, styles) {\n    if (classes === void 0) {\n      classes = '';\n    }\n\n    if (styles === void 0) {\n      styles = {};\n    }\n\n    var container = document.createElement(type);\n    container.className = classes;\n    Object.keys(styles).map(function (key) {\n      return container.style[key] = styles[key];\n    });\n\n    if (typeof children === 'string') {\n      container.innerHTML = children || '';\n    } else {\n      (children || []).forEach(function (child) {\n        return child && container.appendChild(child);\n      });\n    }\n\n    return container;\n  };\n};","map":null,"metadata":{},"sourceType":"module"}