{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { classNames } from '@progress/kendo-react-common';\n/**\n * @hidden\n */\n\nvar ButtonItem =\n/** @class */\nfunction (_super) {\n  __extends(ButtonItem, _super);\n\n  function ButtonItem() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.onClick = function (event) {\n      return _this.props.onClick(event, _this.props.index);\n    };\n\n    return _this;\n  }\n\n  ButtonItem.prototype.render = function () {\n    var _a = this.props,\n        dataItem = _a.dataItem,\n        focused = _a.focused,\n        id = _a.id,\n        onDown = _a.onDown;\n    return React.createElement(\"li\", {\n      id: id,\n      className: classNames('k-item', {\n        'k-state-focused': focused,\n        'k-state-selected': dataItem.selected,\n        'k-state-disabled': dataItem.disabled\n      }),\n      onClick: this.onClick,\n      onMouseDown: onDown,\n      onPointerDown: onDown,\n      role: \"menuItem\",\n      \"aria-disabled\": dataItem.disabled || undefined\n    }, this.renderContent());\n  };\n\n  ButtonItem.prototype.renderContent = function () {\n    var _a = this.props,\n        dataItem = _a.dataItem,\n        textField = _a.textField,\n        index = _a.index;\n    var Render = this.props.dataItem.render || this.props.itemRender;\n    var text = dataItem.text !== undefined ? dataItem.text : textField ? dataItem[textField] : dataItem;\n    var iconClass = dataItem.icon ? \"k-icon k-i-\" + dataItem.icon : dataItem.iconClass;\n    return Render && React.createElement(Render, {\n      item: dataItem,\n      itemIndex: index\n    }) || [iconClass && React.createElement(\"span\", {\n      className: iconClass,\n      role: \"presentation\",\n      key: \"icon\"\n    }), dataItem.imageUrl && React.createElement(\"img\", {\n      className: \"k-image\",\n      alt: \"\",\n      src: dataItem.imageUrl,\n      role: \"presentation\",\n      key: \"image\"\n    }), text];\n  };\n\n  return ButtonItem;\n}(React.Component);\n\nexport default ButtonItem;","map":null,"metadata":{},"sourceType":"module"}