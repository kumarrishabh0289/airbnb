{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\n/**\n * Represents the KendoReact ToolbarItem component.\n * To add a tool to the Toolbar, wrap it inside a ToolbarItem component\n * ([see example]({% slug content_toolbar %})).\n */\n\nvar ToolbarItem =\n/** @class */\nfunction (_super) {\n  __extends(ToolbarItem, _super);\n\n  function ToolbarItem() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._element = null;\n    return _this;\n  }\n\n  Object.defineProperty(ToolbarItem.prototype, \"element\", {\n    /**\n     * Returns the HTML element of the ToolbarItem component.\n     */\n    get: function get() {\n      return this._element;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * @hidden\n   */\n\n  ToolbarItem.prototype.render = function () {\n    var _this = this;\n\n    return React.createElement(\"span\", {\n      className: this.props.className,\n      style: {\n        display: 'inline-block'\n      },\n      ref: function ref(e) {\n        return _this._element = e;\n      }\n    }, this.props.children);\n  };\n  /**\n   * @hidden\n   */\n\n\n  ToolbarItem.propTypes = {\n    className: PropTypes.string\n  };\n  return ToolbarItem;\n}(React.PureComponent);\n\nexport default ToolbarItem;","map":null,"metadata":{},"sourceType":"module"}