{"ast":null,"code":"import { parents, siblingContainer } from '@progress/kendo-popup-common';\nimport { canUseDOM } from '@progress/kendo-react-common';\n/**\n * @hidden\n */\n\nexport var eitherRect = function eitherRect(rect, offset) {\n  if (!rect) {\n    return {\n      height: 0,\n      left: offset.left,\n      top: offset.top,\n      width: 0\n    };\n  }\n\n  return rect;\n};\n/**\n * @hidden\n */\n\nexport var replaceOffset = function replaceOffset(rect, offset) {\n  if (!offset) {\n    return rect;\n  }\n\n  var result = {\n    height: rect.height,\n    left: offset.left,\n    top: offset.top,\n    width: rect.width\n  };\n  return result;\n};\n/**\n * @hidden\n */\n\nexport var removeStackingOffset = function removeStackingOffset(rect, stackingOffset) {\n  if (!stackingOffset) {\n    return rect;\n  }\n\n  var result = {\n    height: rect.height,\n    left: rect.left - stackingOffset.left,\n    top: rect.top - stackingOffset.top,\n    width: rect.width\n  };\n  return result;\n};\n/**\n * @hidden\n */\n\nexport var isDifferentOffset = function isDifferentOffset(oldOffset, newOffset) {\n  var oldLeft = oldOffset.left,\n      oldTop = oldOffset.top;\n  var newLeft = newOffset.left,\n      newTop = newOffset.top;\n  return Math.abs(oldLeft - newLeft) >= 1 || Math.abs(oldTop - newTop) >= 1;\n};\n/**\n * @hidden\n */\n\nexport var hasBoundingRect = function hasBoundingRect(elem) {\n  return !!elem.getBoundingClientRect;\n};\n/**\n * @hidden\n */\n\nexport var OVERFLOW_REGEXP = /auto|scroll/;\n/**\n * @hidden\n */\n\nvar overflowStyle = function overflowStyle(element) {\n  var styles = window.getComputedStyle(element);\n  return \"\" + styles.overflow + styles.overflowX + styles.overflowY;\n};\n/**\n * @hidden\n */\n\n\nexport var scrollableParents = function scrollableParents(element) {\n  var parentElements = [];\n\n  if (!canUseDOM) {\n    return parentElements;\n  }\n\n  var parent = element.parentElement;\n\n  while (parent) {\n    if (OVERFLOW_REGEXP.test(overflowStyle(parent))) {\n      parentElements.push(parent);\n    }\n\n    parent = parent.parentElement;\n  }\n\n  parentElements.push(window);\n  return parentElements;\n};\n/**\n * @hidden\n */\n\nexport var FRAME_DURATION = 1000 / 60; // 1000ms divided by 60fps\n\n/**\n * @hidden\n */\n\nexport var hasRelativeStackingContext = function hasRelativeStackingContext() {\n  if (!canUseDOM) {\n    return false;\n  }\n\n  var top = 10;\n  var parent = document.createElement('div');\n  parent.style.transform = 'matrix(10, 0, 0, 10, 0, 0)';\n  parent.innerHTML = \"<div style=\\\"position: fixed; top: \" + top + \"px;\\\">child</div>\";\n  document.body.appendChild(parent);\n  var isDifferent = parent.children[0].getBoundingClientRect().top !== top;\n  document.body.removeChild(parent);\n  return isDifferent;\n};\n/**\n * @hidden\n */\n\nexport var HAS_RELATIVE_STACKING_CONTEXT = hasRelativeStackingContext();\n/**\n * @hidden\n */\n\nexport var zIndex = function zIndex(anchor, container) {\n  if (!anchor || !canUseDOM) {\n    return null;\n  }\n\n  var sibling = siblingContainer(anchor, container);\n\n  if (!sibling) {\n    return null;\n  }\n\n  var result = [anchor].concat(parents(anchor, sibling)).reduce(function (index, p) {\n    var zIndexStyle = p.style.zIndex || window.getComputedStyle(p).zIndex;\n    var current = parseInt(zIndexStyle, 10);\n    return current > index ? current : index;\n  }, 0);\n  return result ? result + 1 : null;\n};\n/**\n * @hidden\n */\n\nexport var CollisionType = {\n  fit: 'fit',\n  flip: 'flip'\n};\n/**\n * @hidden\n */\n\nexport var AlignPoint = {\n  left: 'left',\n  center: 'center',\n  right: 'right',\n  bottom: 'bottom',\n  top: 'top'\n};\n/**\n * @hidden\n */\n\nexport var throttle = function throttle(func, wait, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var timeout, context, args, result;\n  var previous = 0;\n  options = options || {};\n\n  var later = function later() {\n    previous = options.leading === false ? 0 : new Date().getTime();\n    timeout = null;\n    result = func.apply(context, args);\n\n    if (!timeout) {\n      context = args = null;\n    }\n  };\n\n  var throttled = function throttled() {\n    var now = new Date().getTime();\n\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n\n    var remaining = wait - (now - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n\n      previous = now;\n      result = func.apply(context, args);\n\n      if (!timeout) {\n        context = args = null;\n      }\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n\n  return throttled;\n};","map":null,"metadata":{},"sourceType":"module"}